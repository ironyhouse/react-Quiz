{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/input/input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Selecr.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveOuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/input/input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/create.js","store/reducers/quiz.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ket","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","axios","get","response","data","answerId","getState","rightAnswerId","timeOut","window","setTimeout","isQuizFinished","number","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","autoSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","sabmitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","AuthForm","onSabmit","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxilary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","submitHandler","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","Auxiliary","select","onSubmit","renderControls","create","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.10e85c60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2Hk7U\",\"close\":\"Drawer_close__3isxZ\",\"active\":\"Drawer_active__RNOZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2HcaP\",\"open\":\"MenuToggle_open__2Icod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__11ivb\",\"QuizWrapper\":\"Quiz_QuizWrapper__1Is8H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__36bjY\",\"Question\":\"ActiveQuiz_Question__2Eqva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__YP6rD\",\"success\":\"AnswerItem_success__18SfQ\",\"error\":\"AnswerItem_error__39HB3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__1_MBf\",\"success\":\"FinishedQuiz_success__3bej5\",\"error\":\"FinishedQuiz_error__Svmqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__39-Cy\",\"success\":\"Button_success__2xPN3\",\"error\":\"Button_error__2R6tG\",\"primary\":\"Button_primary__2N6op\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__xeCd-\",\"center\":\"Loader_center__2Pok9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2JwaJ\",\"AuthForm\":\"Auth_AuthForm__Tkxbd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__1Ubtn\",\"invalid\":\"input_invalid__1Hfdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1Xoxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__KxeIy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__3BHs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3uufD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__UEydJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Selecr_Select__366XR\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls= [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i \r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nclass Drawer extends Component {\r\n\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    renderLinks(links) {\r\n        return links.map((link, index) => {\r\n            return(\r\n                <li key={index}>\r\n                   <NavLink\r\n                    to={link.to}\r\n                    exact={link.exact}\r\n                    activeClassName={classes.active}\r\n                    onClick={this.clickHandler}\r\n                   >\r\n                       {link.label}\r\n                   </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        const links = [\r\n            {to: '/', label: 'Список', exact: true}\r\n        ]\r\n\r\n        if (this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n            links.push({to: '/logout', label: 'Выйти', exact: false})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n        }\r\n\r\n        return(\r\n            <>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        { this.renderLinks(links) }\r\n                    </ul>\r\n                </nav>\r\n                { this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, { Component } from 'react'\r\nimport classes from './Layout.module.css'\r\nimport {connect} from 'react-redux'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n    \r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer \r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n\r\n                <MenuToggle \r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction  mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n  const cls = [classes.AnswerItem]\r\n\r\n  if (props.state) {\r\n    cls.push(classes[props.state])\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      { props.answer.text }\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        { props.answers.map((answer, index) => {\r\n            return(\r\n                <AnswerItem \r\n                    ket = {index}\r\n                    answer = {answer}\r\n                    onAnswerClick = {props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            )\r\n         })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong> {props.answerNumber} </strong>\r\n                {props.question}\r\n            </span>\r\n\r\n            <small> {props.answerNumber}  из {props.quizLength} </small>\r\n        </p>\r\n\r\n        <AnswersList \r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick = {props.onAnswerClick}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return(\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n       if (props.results[key] === 'success') {\r\n           total++\r\n       }\r\n\r\n       return total\r\n    }, 0)\r\n\r\n    return(\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'errar' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n                        <li \r\n                            key={index}\r\n                        >\r\n                            <strong>{index + 1} </strong>\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\"> Повторить </Button>\r\n                <Link to=\"/\">\r\n                    <Button type=\"success\"> Перейти в список тестов </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div />\r\n            <div />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport {FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, \r\n        FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS,\r\n        QUIZ_SET_STATE, FINISH_QUIZ,\r\n        QUIZ_NEXT_QUESTION, QUIZ_RETRY} from './actionTypes'\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n            const response = await axios.get('https://react-quiz-18cbc.firebaseio.com/quizes.json')\r\n            \r\n            const quizes  = []\r\n\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест №${index + 1}`\r\n                })\r\n            })\r\n\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get(`https://react-quiz-18cbc.firebaseio.com/quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState, results\r\n    }\r\n}\r\n\r\nexport function FinishQuiz () {\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion (number) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        number\r\n    }\r\n}\r\n\r\nexport function retryQuiz () {\r\n    return {\r\n        type: QUIZ_RETRY\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n            // const timeOut = window.setTimeout(() => {\r\n            //     if (isQuizFinished(state)) {\r\n            //         dispatch(FinishQuiz())\r\n            //     } else {\r\n            //         dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n            //     }\r\n            //     window.clearTimeout(timeOut)\r\n            // }, 500)\r\n        } else {\r\n            results[question.id] = 'error'\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n        }\r\n\r\n        const timeOut = window.setTimeout(() => {\r\n            if (isQuizFinished(state)) {\r\n                dispatch(FinishQuiz())\r\n            } else {\r\n                dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n            }\r\n            window.clearTimeout(timeOut)\r\n        }, 500)\r\n    }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE' \r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION =  'RESET_QUIZ_CREATION'\r\n\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, { Component } from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveOuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz'\r\n\r\nclass Quiz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы:</h1>\r\n\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished\r\n                        ? <FinishedQuiz \r\n                               results={this.props.results}\r\n                               quiz={this.props.quiz}\r\n                               onRetry={this.props.retryQuiz}\r\n                           /> \r\n                        : <ActiveQuiz \r\n                           answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                           question = {this.props.quiz[this.props.activeQuestion].question}\r\n                           onAnswerClick = { this.props.quizAnswerClick }\r\n                           quizLength={this.props.quiz.length}\r\n                           answerNumber={this.props.activeQuestion + 1}\r\n                           state={this.props.answerState}\r\n                       />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loading: state.quiz.loading,\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz\r\n    }    \r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }    \r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, { Component } from 'react'\r\nimport classes from './QuizList.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\nclass QuizList extends Component {\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map((quiz) => {\r\n            return(\r\n                <li \r\n                    ket={quiz.id}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                  <h1>Список тестов</h1>\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                            ? <Loader />\r\n                            : <ul>\r\n                                 { this.renderQuizes() }\r\n                              </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction  mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport classes from './input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return(\r\n        <div className={cls.join(' ')}>\r\n           <label htmlFor=\"\">{props.label}</label> \r\n           <input \r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n           />\r\n\r\n            { \r\n                isInvalid(props) \r\n                    ? <span>{props.errorMessage  || 'Введите верное значение'}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import axios from 'axios'\r\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from '../actions/actionTypes'\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email, password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB15rM6N_9En0qnoHle_cj-wpB3bL3TLTU'\r\n\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB15rM6N_9En0qnoHle_cj-wpB3bL3TLTU'\r\n        }\r\n\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(autoSuccess(data.idToken))  \r\n        dispatch(autoLogout(data.expiresIn)) \r\n    }\r\n}\r\n\r\nexport function autoLogout (time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if (!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(autoSuccess(token))  \r\n                dispatch(autoLogout((expirationDate.getTime() - new Date()) / 1000)) \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function autoSuccess (token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/input/input'\r\nimport is from 'is_js'\r\nimport { connect } from 'react-redux'\r\nimport {auth} from '../../store/actions/auth'\r\n// https://react-quiz-18cbc.firebaseio.com/\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный Email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный Пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        )\r\n    }\r\n    sabmitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValid = true\r\n\r\n        if(validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if(validation.email) {\r\n            // isValid = validateEmail(value) && isValid\r\n            isValid = is.email(value) && isValid\r\n        }\r\n\r\n        if(validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input \r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Auth</h1>\r\n\r\n                    <form className={classes.AuthForm} onSabmit={this.sabmitHandler}>\r\n                        { this.renderInputs() }\r\n\r\n                        <Button \r\n                            type=\"success\" \r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >Войти\r\n                        </Button>\r\n                        <Button \r\n                            type=\"primary\" \r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >Зарегестрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n    function mapDispatchToProps(dispatch) {\r\n        return {\r\n            auth: (email, password, isLogin) =>  dispatch(auth(email, password, isLogin))\r\n        }\r\n    }\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react'\r\nimport classes from './Selecr.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}--${Math.random}`\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                { props.options.map((option, index) => {\r\n                    return (\r\n                        <option\r\n                            value = {option.value}\r\n                            key = {option.value.key + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null ) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n\r\n    let isValid = true\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n\r\n    return isFormValid\r\n}","const Auxilary = props => props.children \r\n\r\nexport default Auxilary","import React, {Component} from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/input/input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport { connect } from 'react-redux'\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'Значние не может быть пустым',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n    }\r\n\r\n    \r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = event => {\r\n        event.preventDefault()\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        })\r\n    }\r\n\r\n    createQuizHandler =  event => {\r\n        event.preventDefault()\r\n        \r\n        this.setState({\r\n            quiz: [],\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        })\r\n        this.props.finishCreateQuiz()\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[controlName] }\r\n    \r\n        control.touched = true\r\n        control.value = value\r\n        control.valid = validate(control.value, control.validation)\r\n    \r\n        formControls[controlName] = control\r\n    \r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n          const control = this.state.formControls[controlName]\r\n    \r\n            return (\r\n                <Auxiliary key={controlName + index}>\r\n                <Input\r\n                    label={control.label}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    shouldValidate={!!control.validation}\r\n                    touched={control.touched}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                />\r\n                { index === 0 ? <hr /> : null }\r\n                </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n        this.setState ({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const select = <Select\r\n            label=\"Выберите правельный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n                \r\n            ]}\r\n        />\r\n        return(\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>QuizCreator</h1>\r\n\r\n                    <form onSubmit={ this.submitHandler }>\r\n                        \r\n                        {this.renderControls()}\r\n\r\n                        {select}\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n    return {\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz()) \r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item \r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport  function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('https://react-quiz-18cbc.firebaseio.com/quizes.json', getState().create.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {logout} from '../../store/actions/auth'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to={\"/\"} />\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport {connect} from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport {autoLogin} from './store/actions/auth';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/react-quiz\" component={QuizList} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n        <Route path=\"/\" exact component={QuizList} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/react-quiz\" component={QuizList} />\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={QuizList} />\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        { routes }\n      </Layout>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {AUTH_SUCCESS, AUTH_LOGOUT} from '../actions/actionTypes'\r\n\r\nconst initialState= {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer( state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT: \r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function createReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state, quiz: []\r\n            }\r\n        default: \r\n        return state\r\n    }\r\n}","import {FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, \r\n        FETCH_QUIZES_ERROR, FETCH_QUIZ_SUCCESS,\r\n        QUIZ_SET_STATE, FINISH_QUIZ,\r\n        QUIZ_NEXT_QUESTION, QUIZ_RETRY} from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state, answerState: null, activeQuestion: action.number\r\n            }\r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                isFinished: false, \r\n                results: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport authReducer from './auth'\r\nimport createReducer from './create'\r\nimport quizReducer from './quiz'\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nconst app = (\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}